  
.prose code:not(:where(pre *)) {
    @apply rounded-lg px-2 py-1 content-none;
    @apply bg-neutral-200 dark:bg-[var(--prism-background)];
}

.prose strong{
    @apply dark:text-yellow-200
}

.props blockquote {
    @apply dark:text-yellow-200
} 

.prose .anchor {
    @apply absolute -ml-10 mt-1 flex h-6 w-6 items-center justify-center opacity-0 transition-all;
    @apply rounded-md border-none no-underline ring-1 ring-neutral-700/10;
    @apply hover:shadow hover:ring-neutral-700/30 dark:bg-neutral-700 dark:text-neutral-400;
  }
  
  .prose .anchor:after {
    content: ' ';
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' aria-hidden='true'%3E%3Cpath d='M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10' stroke='currentColor' strokeWidth='1.5' strokeLinecap='round' /%3E%3C/svg%3E");
    mask-repeat: no-repeat;
    mask-position: center;
  
    @apply h-4 w-4 bg-neutral-700 dark:bg-neutral-400;
  }
  
  .prose .anchor:hover,
  .prose *:hover > .anchor {
    @apply md:opacity-100;
  }